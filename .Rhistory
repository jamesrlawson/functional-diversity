traits$leafWidth.mean <- NULL
traits$leafarea <- NULL
traits$growthform <- NULL
traits$lifehistory <- NULL
traits <- ddply(traits, .(species), unique)
# transform traits
hist(log10(traits$seedmass))
hist(log10(traits$SLA))
hist(log10(traits$maxheight), breaks = 5)
hist((traits$flowering.period)) # non-normal distribution with any common transform
hist(log10(traits$WD))
traits$seedmass <- log10(traits$seedmass)
traits$SLA <- log10(traits$SLA)
traits$maxheight <- log10(traits$maxheight)
traits$length.width.ratio <- log10(traits$length.width.ratio)
traits$WD <- log10(traits$WD)
traits$woody <- as.numeric(traits$woody)
traits$woody <- NULL
# create abun, in correct input format for FD analysis
abun <- data.frame(allspp.cover[1])
abun <- cbind(abun, allspp.cover[2])
abun <- cbind(abun, allspp.cover[18])
abun <- cast(abun, plotID ~ species, value="relcover", fill=0)
rownames(abun) <- abun$plotID
abun$plotID <- NULL
spp <- traits$species
traits$species <- NULL
rownames(traits) <- spp
rm(spp)
View(abun)
str(traits)
View(traits)
View(abun)
hist(alltraits$SLA)
View(ferns.totalcover)
View(alltraits)
View(traits)
climate <- read.csv("data/spatial_clim_soil.csv", header=T)
hydroplots
source("scripts/functions.R")
options(stringsAsFactors = FALSE)
library(plyr)
library(ggplot2)
library(reshape)
library(FD)
library(SYNCSA)
#############################################################################################
############################# GET RELATIVE ABUNDANCES FOR ALL TRAITS ########################
#############################################################################################
# load in data
alltraits <- read.csv("data/alltraits.csv", header=TRUE)
percentcover <- read.csv("data/percentcover.csv", header=TRUE)
hydro <- read.csv("data/hydro.csv", header=TRUE)
leafDimensions <- read.csv("data/leafDimensions.csv", header=TRUE, stringsAsFactors = FALSE)
WD <- read.csv("data/WD.csv")
categories <- read.csv("data/categories.csv", header=TRUE)
# remove observations that average less than 1% cover
percentcover <- subset(percentcover, avgcover > 1)
# generate df with total % cover (across all strata) of species at each plot
plotsums <- ddply(percentcover, .(plotID, species), summarise, speciescover = sum(avgcover))
plotcover <- ddply(percentcover, .(plotID), summarise, plotCover = sum(avgcover))
# remove data poor species
allspp <- subset(alltraits, growthform != "F") # remove ferns
# separate out ferns so we can use this in the data density analysis below
ferns <- subset(alltraits, growthform == "F")
# remove fern spp. we're going to add back in to the dataset
ferns <- ferns[-17,] # Pteridium esculentum
#ferns <- ferns[-15,] # Pellaea falcata - adding causes NA's in FD distance matrix
ferns <- ferns[-10,] # Doodia aspera
ferns <- ferns[-8,] # Calochlaena dubia
ferns <- ferns[-5,] # Blechnum nudum
#ferns <- ferns[-1,] # Adiantum aethiopicum - adding causes NA's in FD distance matrix
allspp <- na.omit(allspp)
allspp <- rbind(allspp, alltraits[2,]) # Acacia boormanii
allspp <- rbind(allspp, alltraits[130,]) # Eucalyptus resinifera
allspp <- rbind(allspp, alltraits[135,]) # Eustrephus latifolius
allspp <- rbind(allspp, alltraits[176,]) # Hovea asperifolia subsp. asperifolia
allspp <- rbind(allspp, alltraits[204,]) # Lomandra hystrix
allspp <- rbind(allspp, alltraits[223,]) # Notelaea microcarpa subsp. microcarpa
allspp <- rbind(allspp, alltraits[318,]) # Stephania japonica
allspp <- rbind(allspp, alltraits[348,]) # Waterhousea floribunda
#allspp <- rbind(allspp, alltraits[18,]) # Adiantum aethiopicum
allspp <- rbind(allspp, alltraits[42,]) # Blechnum nudum
allspp <- rbind(allspp, alltraits[53,]) # Calochlaena dubia
allspp <- rbind(allspp, alltraits[112,]) # Doodia aspera
allspp <- rbind(allspp, alltraits[273,]) # Pteridium esculentum
#allspp <- rbind(allspp, alltraits[239,]) # Pellaea falcata
allspp <- allspp[order(allspp$species), ]
# add wood density and leaf dimension data
allspp <- merge(allspp, leafDimensions, all.x=TRUE)
allspp <- merge(allspp, WD, all.x=TRUE)
## add calculated leaf area ##
allspp$leafarea <- allspp$leafLength.mean * allspp$leafWidth.mean * 0.7
##
allspp.cover <- findtraitvals(plotsums, allspp)
allspp.cover <- merge(allspp.cover, plotcover)
### data density ###
allspp.traitcover <- ddply(allspp.cover, .(plotID), summarise, traitcover = sum(speciescover))
allspp.cover <- merge(allspp.cover, allspp.traitcover, by.x = "plotID", by.y = "plotID")
allspp.cover <- relabund(allspp.cover)
ferns.cover <- merge(ferns, percentcover, by.x = "species", by.y = "species")
ferns.totalcover <- ddply(ferns.cover, .(plotID), summarise, totalferncover = sum(avgcover))
dataDensity <- data.frame(cbind("plotID" = unique(allspp.cover$plotID),
"traitcover" = unique(allspp.cover$traitcover),
"totalferncover" = c(1.2,
0,
0,
1.4,
0,
0,
0,
0,
0,
2.6,
0,
0,
0,
0,
0), # values from ferns.totalcover
"plotCover" = unique(allspp.cover$plotCover)))
dataDensity$coverage <- dataDensity$traitcover / dataDensity$plotCover
dataDensity$coverage.withferns <- (dataDensity$traitcover + dataDensity$totalferncover) / (dataDensity$plotCover)
dataDensity$WD = ddply(allspp.cover, .(plotID), summarise, WD = length(na.omit(WD)) / length(WD))$WD
dataDensity$maxheight = ddply(allspp.cover, .(plotID), summarise, maxheight = length(na.omit(maxheight)) / length(maxheight))$maxheight
dataDensity$seedmass = ddply(allspp.cover, .(plotID), summarise, seedmass = length(na.omit(seedmass)) / length(seedmass))$seedmass
dataDensity$SLA = ddply(allspp.cover, .(plotID), summarise, SLA = length(na.omit(SLA)) / length(SLA))$SLA
dataDensity$flowering.period = ddply(allspp.cover, .(plotID), summarise, flowering.period = length(na.omit(flowering.period)) / length(flowering.period))$flowering.period
dataDensity$length.width.ratio = ddply(allspp.cover, .(plotID), summarise, length.width.ratio = length(na.omit(length.width.ratio)) / length(length.width.ratio))$length.width.ratio
dataDensity$traitcover <- NULL
dataDensity$totalferncover <- NULL
dataDensity$plotCover <- NULL
dataDensity$coverage.withferns <- NULL
dataDensity <- format(dataDensity, digits = 3)
#
test <- ddply(allspp.cover, .(plotID), summarise, summedRelCover = (sum(relcover)))
print(test)
rm(test)
traits <- allspp.cover[2]
traits <- cbind(traits, allspp.cover[4:15])
traits$leafLength.mean <- NULL
traits$leafWidth.mean <- NULL
traits$leafarea <- NULL
traits$growthform <- NULL
traits$lifehistory <- NULL
traits <- ddply(traits, .(species), unique)
# transform traits
hist(log10(traits$seedmass))
hist(log10(traits$SLA))
hist(log10(traits$maxheight), breaks = 5)
hist((traits$flowering.period)) # non-normal distribution with any common transform
hist(log10(traits$WD))
traits$seedmass <- log10(traits$seedmass)
traits$SLA <- log10(traits$SLA)
traits$maxheight <- log10(traits$maxheight)
traits$length.width.ratio <- log10(traits$length.width.ratio)
traits$WD <- log10(traits$WD)
traits$woody <- as.numeric(traits$woody)
traits$woody <- NULL
# create abun, in correct input format for FD analysis
abun <- data.frame(allspp.cover[1])
abun <- cbind(abun, allspp.cover[2])
abun <- cbind(abun, allspp.cover[18])
abun <- cast(abun, plotID ~ species, value="relcover", fill=0)
rownames(abun) <- abun$plotID
abun$plotID <- NULL
spp <- traits$species
traits$species <- NULL
rownames(traits) <- spp
rm(spp)
### run FD analysis ### important that traits are scaled (stand.x = TRUE)
FD.dbfd <- dbFD(traits,
abun,
w.abun = TRUE,  # use presence - absence converted data?
stand.x = FALSE,
corr = c("cailliez"),
#                calc.FGR = TRUE,
#                clust.type = c("kmeans"),
#                km.inf.gr = c(2),
#                km.sup.gr = c(10),
#                km.iter = (100),
#                calc.FDiv = TRUE,
#                calc.FRic = TRUE,
m = "max",
calc.CWM=TRUE,
print.pco=TRUE,
#                scale.RaoQ=TRUE,
#               stand.FRic=TRUE
)
## run SYNCSA analysis for functional redundancy and Simpson diversity ##
# to use presabs only
abun.presabs <- abun
abun.presabs[abun.presabs>0] <- 1
FD.redun_presabs <- rao.diversity(abun.presabs, traits=traits)
FD.redun <- rao.diversity(abun, traits=traits)
hydroplots <- hydro
catname <- as.factor(categories$cats)
hydroplots$FDis <- FD.dbfd$FDis
hydroplots$FDiv <- FD.dbfd$FDiv
hydroplots$FRic <- FD.dbfd$FRic
hydroplots$FEve <- FD.dbfd$FEve
hydroplots$RaoQ <- FD.dbfd$RaoQ
hydroplots$FGR <- FD.dbfd$FGR
hydroplots$nbsp <- FD.dbfd$nbsp
hydroplots$simpson <- FD.redun$Simpson
hydroplots$FunRao <- FD.redun$FunRao
hydroplots$redun <- FD.redun$FunRedundancy
CWM <- FD.dbfd$CWM
hydroplots$SLA.CWM <- CWM$SLA
hydroplots$seedmass.CWM <- CWM$seedmass
hydroplots$maxheight.CWM <- CWM$maxheight
hydroplots$flowering.period.CWM <- CWM$flowering.period
hydroplots$WD.CWM <- CWM$WD
hydroplots$leafratio.CWM <- CWM$length.width.ratio
CWM$woody <- NULL
CWM$lifehistory <- NULL
View(cor(CWM))
pairs(CWM)
## try a Tukey's test to compare hydro categories ##
FDis.aov <- aov(hydroplots$FDis ~ as.factor(categories$cats))
TukeyHSD(FDis.aov)
## add total species richness information ##
## presence / absence data for all species at each site including rare spp. ##
diversity <- read.csv("data/diversity.csv", header=TRUE, stringsAsFactors = FALSE)
div_hydro <- merge(diversity, hydro)
hydroplots$richness <- tapply(div_hydro$species, div_hydro$plot, length)
str(hydroplots)
dim(hydroplots)
dim(climate)
hydroplots$plotID
climate
everything <- cbind(hydroplots, climate)
str(everything)
zap <- getAllStats(hydroplots, hydroplots$FDis, FD)
getAllStats(hydroplots, hydroplots$FDis, FD)
getAllStats(everything, everything$FDis, FD)
plot(FDis ~ clim_isot, data = everything)
plot(CVAnnHSPeak ~ clim_isot)
plot(CVAnnHSPeak ~ clim_isot, data = everything)
spatial <- data.frame(everything["lat"],everything["long"])
spatial.dist <- dist(spatial)
str(hydroplots)
hydroplots[,2:34]
hydroplots[,2:35]
hydroplots[,2:36]
hydroplots[,2:38]
hydroplots[,2:37]
hydro.dist <- dist(hydroplots[,2:37])
mantel.rtest(spatial.dist, hydro.dist, nrepet=9999)
spatial.dist.inv <- as.matrix(1/spatial.dist)
diag(spatial.dist.inv) <- 0
Moran.I(hydroplots$FDis, spatial.dist.inv)
str(everything)
everything[,78:90]
everything[,79:90]
mantel.rtest(soil.dist, hydro.dist, nrepet=9999)
soil.dist <- dist(everything[,79:90])
mantel.rtest(soil.dist, hydro.dist, nrepet=9999)
str(everything)
everything[,40]
everything[,40:42]
everything[,45:46]
everything[,46:60]
everything[,60:79]
everything[,60:78]
clim.dist <- dist(everything[,60:78])
mantel.rtest(clim.dist, hydro.dist, nrepet=9999)
spatial.dist.inv <- as.matrix(1/spatial.dist)
diag(spatial.dist.inv) <- 0
Moran.I(hydroplots$FDis, spatial.dist.inv)
soil.dist.inv <- as.matrix(1/soil.dist)
diag(soil.dist.inv) <- 0
Moran.I(hydroplots$FDis, soil.dist.inv)
clim.dist.inv <- as.matrix(1/clim.dist)
diag(clim.dist.inv) <- 0
Moran.I(hydroplots$FDis, clim.dist.inv)
hydro.dist.inv <- as.matrix(1/hydro.dist)
diag(hydro.dist.inv) <- 0
Moran.I(hydroplots$FDis, hydro.dist.inv)
require(FD)
# hydro metrics vs geographic position #
spatial <- data.frame(everything["lat"],everything["long"])
spatial.gowdis <- gowdis(spatial)
hydro.gowdis <- gowdis(hydroplots[,2:37])
mantel.rtest(spatial.gowdis, hydro.gowdis, nrepet=9999)
soil.gowdis <- gowdis(everything[,79:90])
mantel.rtest(soil.gowdis, hydro.gowdis, nrepet=9999)
clim.gowdis <- gowdis(everything[,60:78])
mantel.rtest(clim.gowdis, hydro.gowdis, nrepet=9999)
spatial.gowdis.inv <- as.matrix(1/spatial.gowdis)
diag(spatial.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, spatial.gowdis.inv)
soil.gowdis.inv <- as.matrix(1/soil.gowdis)
diag(soil.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, soil.gowdis.inv)
clim.gowdis.inv <- as.matrix(1/clim.gowdis)
diag(clim.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, clim.gowdis.inv)
hydro.gowdis.inv <- as.matrix(1/hydro.gowdis)
diag(hydro.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, hydro.gowdis.inv)
require(ape)
?Moran.I
everything$WD
getAllStats(everything, everything$WD, FD)
plot(WD ~ soil_pto, data=everything)
everything$WD
plot(everything$soil_pto, everything$WD)
plot(everything$WD,everything$soil_pto)
plot(everything$WD,everything$clim_pwrm)
plot(everything$WD,everything$M_MaxM)
data(doubs)
require(ade4)
data(doubs)
str(everything)
require(vegan)
FDis.varpart <- varpart(hydroplots$FDis, ~ hydroplots[,2:37], ~everything[,60:78], ~everything[,79:90])
h <- hydroplots[,2:37]
c <- everything[,60:78]
s <- everything[,79:90]
h$.
FDis.varpart <- varpart(hydroplots$FDis, ~ h, ~c, ~s)
?varpart
FDis.varpart <- varpart(hydroplots$FDis, h, c, s)
h.pca <- prcomp(h, center=TRUE, retx =TRUE, scale=TRUE)
c.pca <- prcomp(c, center=TRUE, retx =TRUE, scale=TRUE)
s.pca <- prcomp(s, center=TRUE, retx =TRUE, scale=TRUE)
sumary(h.pca)
summary(h.pca)
summary(c.pca)
summary(s.pca)
h.pc1 <- h.pca$x[,1]
h.pc2 <- h.pca$x[,2]
c.pc1 <- c.pca$x[,1]
c.pc2 <- c.pca$x[,2]
c.pc3 <- c.pca$x[,3]
s.pc1 <- s.pca$x[,1]
s.pc2 <- s.pca$x[,2]
s.pc3 <- s.pca$x[,3]
s.pc4 <- s.pca$x[,4]
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + h.pc2, ~ c.pc1 + c.pc2 + c.pc3, ~s.pc1 + s.pc2 + s.pc3 + s.pc4)
plot(FDis.varpart)
FDis.varpart
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + h.pc2,
~ c.pc1 + c.pc2 + c.pc3,
#                        ~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + h.pc2
~ ,c.pc1 + c.pc2 + c.pc3
#                        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + h.pc2
,~ c.pc1 + c.pc2 + c.pc3
#                        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
FDis.lm <- lm(hydroplots$FDis ~h.pc1 + h.pc2 + c.pc1 + c.pc2 + c.pc3)
FDis.lm.dredge <- dredge(FDis.lm)
require(MuMIn)
FDis.lm.dredge <- dredge(FDis.lm)
?dredge
options(na.action = "na.fail")
FDis.lm.dredge <- dredge(FDis.lm)
FDis.lm.dredge
FDis.lm1 <- lm(hydroplots$FDis ~ h.pc1 + c.pc2)
summary(FDis.lm1)
FDis.lm <- lm(hydroplots$FDis ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2) + c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3 + I(c.pc3^2))
FDis.lm.dredge <- dredge(FDis.lm)
FDis.lm.dredge
subset(FDis.lm.dredge, delta < 4)
FDis.lm1 <- lm(hydroplots$FDis ~ h.pc1 + I(h.pc1^2) + c.pc2)
summary(FDis.lm1)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2)
,~ I(c.pc1^2) + I(c.pc2^2) + I(c.pc3^2)
#                        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2)
,~ c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3+  I(c.pc3^2)
#                        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
## SPATIAL etc. AUTOCORRELATION TESTS ##
require(ade4)
require(ape)
require(FD)
require(vegan)
require(MuMIn)
options(na.action = "na.fail")
# hydro metrics vs geographic position #
spatial <- data.frame(everything["lat"],everything["long"])
spatial.gowdis <- gowdis(spatial)
hydro.gowdis <- gowdis(hydroplots[,2:37])
mantel.rtest(spatial.gowdis, hydro.gowdis, nrepet=9999)
# hydro metrics vs soil #
soil.gowdis <- gowdis(everything[,79:90])
mantel.rtest(soil.gowdis, hydro.gowdis, nrepet=9999)
# hydro metrics vs climate #
clim.gowdis <- gowdis(everything[,60:78])
mantel.rtest(clim.gowdis, hydro.gowdis, nrepet=9999)
# for FDis #
spatial.gowdis.inv <- as.matrix(1/spatial.gowdis)
diag(spatial.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, spatial.gowdis.inv)
soil.gowdis.inv <- as.matrix(1/soil.gowdis)
diag(soil.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, soil.gowdis.inv)
clim.gowdis.inv <- as.matrix(1/clim.gowdis)
diag(clim.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, clim.gowdis.inv)
hydro.gowdis.inv <- as.matrix(1/hydro.gowdis)
diag(hydro.gowdis.inv) <- 0
Moran.I(hydroplots$FDis, hydro.gowdis.inv)
# variance partitioning
h <- hydroplots[,2:37]
c <- everything[,60:78]
s <- everything[,79:90]
h.pca <- prcomp(h, center=TRUE, retx =TRUE, scale=TRUE)
c.pca <- prcomp(c, center=TRUE, retx =TRUE, scale=TRUE)
s.pca <- prcomp(s, center=TRUE, retx =TRUE, scale=TRUE)
h.pc1 <- h.pca$x[,1]
h.pc2 <- h.pca$x[,2]
c.pc1 <- c.pca$x[,1]
c.pc2 <- c.pca$x[,2]
c.pc3 <- c.pca$x[,3]
s.pc1 <- s.pca$x[,1]
s.pc2 <- s.pca$x[,2]
s.pc3 <- s.pca$x[,3]
s.pc4 <- s.pca$x[,4]
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2)
,~ c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3+  I(c.pc3^2)
#                        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
# multimodel inf
FDis.lm <- lm(hydroplots$FDis ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2) + c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3 + I(c.pc3^2))
FDis.lm.dredge <- dredge(FDis.lm)
subset(FDis.lm.dredge, delta < 4)
FDis.lm1 <- lm(hydroplots$FDis ~ h.pc1 + I(h.pc1^2) + c.pc2)
summary(FDis.lm1)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2)
,~ c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3+  I(c.pc3^2)
,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(hydroplots$FDis, ~h.pc1 + I(h.pc1^2) + h.pc2 + I(h.pc2^2)
,~ c.pc1 + I(c.pc1^2) + c.pc2 + I(c.pc2^2) + c.pc3+  I(c.pc3^2)
#        ,~s.pc1 + s.pc2 + s.pc3 + s.pc4
)
FDis.varpart
plot(FDis.varpart)
plot(FDis ~ h.pc1, hydroplots)
plot(FDis ~ h.pc2, hydroplots)
plot(FDis ~ c.pc1, hydroplots)
plot(FDis ~ c.pc2, hydroplots)
plot(FDis ~ c.pc3, hydroplots)
summary(lm(FDis ~ c.pc2, hydroplots))
summary(lm(FDis ~ c.pc1, hydroplots))
summary(lm(FDis ~ c.pc1 + I(c.pc1^2), hydroplots))
summary(lm(FDis ~ c.pc2 + I(c.pc2^2), hydroplots))
summary(lm(FDis ~ h.pc2 + I(h.pc2^2), hydroplots))
summary(lm(FDis ~ h.pc1 + I(h.pc1^2), hydroplots))
getAllStats(everything, everything$FDis, FD)
getStats(everything, everything$FDis, FD)
plot(clim_isot, M_MinM)
plot(everything$clim_isot, everything$M_MinM)
plot(everything$clim_isot, everything$MDFMDFSummer)
FDis.varpart <- varpart(everything$FDis,
~clim_pdmt + I(clim_pdmt^2) + clim_pcld + I(clim_pcld^2) + clim_isot + I(clim_isot^2),
~CVAnnHSNum + CVAnnHSPeak * MDFMDFSummer,
data = everything)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(everything$FDis,
~clim_pdmt + I(clim_pdmt^2) + clim_pcld + I(clim_pcld^2) + clim_isot + I(clim_isot^2),
~CVAnnHSNum + CVAnnHSPeak + MDFMDFSummer,
data = everything)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(everything$FDis,
~clim_pdmt + I(clim_pdmt^2) + clim_pcld + I(clim_pcld^2) + clim_isot + I(clim_isot^2),
~CVAnnHSNum + CVAnnHSPeak * MDFMDFSummer,
data = everything)
FDis.varpart
plot(FDis.varpart)
clim.varpart <- varpart(everything$FDis,
~clim_pdmt + I(clim_pdmt^2),
~clim_pcld + I(clim_pcld^2),
~ clim_isot + I(clim_isot^2),
data = everything)
clim.varpart
plot(clim.varpart)
FDis.varpart <- varpart(everything$FDis,
~clim_isot + I(clim_isot^2),
~CVAnnHSNum + CVAnnHSPeak * MDFMDFSummer,
data = everything)
FDis.varpart
plot(FDis.varpart)
FDis.varpart <- varpart(everything$FDis,
~clim_isot + I(clim_isot^2),
~CVAnnHSNum + CVAnnHSPeak+MDFMDFSummer,
data = everything)
FDis.varpart
plot(FDis.varpart)
